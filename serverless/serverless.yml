service: eggtive-recall-api

frameworkVersion: "3"

plugins:
  - serverless-esbuild
  - serverless-step-functions
  - serverless-offline

package:
  individually: true

custom:
  serverless-offline:
    httpPort: 4000
    lambdaPort: 4002

useDotenv: true

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-southeast-1
  stage: ${opt:stage, "dev"}
  architecture: x86_64
  timeout: 30
  environment:
    STAGE: ${self:provider.stage}

functions:
  Hello:
    handler: ./src/hello.handler
    events:
      - http:
          path: hello
          method: post
          cors: true
    package:
      include:
        - src/hello/**
  GenerateQuiz:
    handler: ./src/generateQuiz/handler.handler
    environment:
      OPENAI_API_KEY: ${env:OPENAI_API_KEY}
    package:
      include:
        - src/generateQuiz/**

  SaveQuiz:
    handler: ./src/saveQuiz/handler.handler
    environment:
      MONGODB_PASSWORD: ${env:MONGODB_PASSWORD}
      MONGODB_NAME: ${env:MONGODB_NAME}
    package:
      include:
        - src/saveQuiz/**

stepFunctions:
  stateMachines:
    CreateNewQuizStateMachine:
      events:
        - http:
            path: quizzes/create
            method: POST
      definition:
        StartAt: GenerateQuiz
        States:
          GenerateQuiz:
            Type: Task
            Resource:
              Fn::GetAtt: [GenerateQuiz, Arn]
            Next: SaveQuiz
            Retry:
              - ErrorEquals:
                  - QuizEmptyError
                IntervalSeconds: 2
                MaxAttempts: 3
                BackoffRate: 2
          SaveQuiz:
            Type: Task
            InputPath: "$.body"
            Resource:
              Fn::GetAtt: [SaveQuiz, Arn]
            End: true
